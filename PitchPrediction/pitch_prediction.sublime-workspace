{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"train",
				"train_data"
			],
			[
				"sample",
				"sampled_idx"
			],
			[
				"label",
				"labels_counts"
			],
			[
				"labe",
				"labels_counts"
			],
			[
				"inde",
				"index_in_epoch"
			],
			[
				"inst",
				"instances_vec"
			],
			[
				"pitcher",
				"pitcher_name"
			],
			[
				"pitch",
				"pitcher_name"
			],
			[
				"pit",
				"pitcher_name"
			],
			[
				"batch",
				"batch_ys"
			],
			[
				"med",
				"med_x"
			],
			[
				"paddi",
				"padding-right"
			],
			[
				"right",
				"padding-right"
			],
			[
				"Cur",
				"current_price"
			],
			[
				"curr",
				"curr_day"
			],
			[
				"day",
				"curr_day"
			],
			[
				"insid",
				"inside_tradings"
			],
			[
				"currne",
				"current_price"
			],
			[
				"trd",
				"trader_name"
			]
		]
	},
	"buffers":
	[
		{
			"file": "scikit-learn/run.py",
			"settings":
			{
				"buffer_size": 10281,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "classifiers/results/best-results.txt",
			"settings":
			{
				"buffer_size": 13820,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "classifiers/results/nn-results.txt",
			"settings":
			{
				"buffer_size": 8900,
				"line_ending": "Unix"
			}
		},
		{
			"file": "classifiers/results/svm-results.txt",
			"settings":
			{
				"buffer_size": 8900,
				"line_ending": "Unix"
			}
		},
		{
			"file": "classifiers/results/rf-results.txt",
			"settings":
			{
				"buffer_size": 8900,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "RESULTS:\n\nClayton Kershaw:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.544497\n\n\nMax Scherzer:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.611485\n\n\nChris Sale:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.523240\n\n\nMadison Bumgarner:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.450726\n\n\nNoah Syndergaard:\n----------------------------------------------------\nmodel: rf\nRandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n            max_depth=None, max_features='auto', max_leaf_nodes=None,\n            min_impurity_split=1e-07, min_samples_leaf=1,\n            min_samples_split=2, min_weight_fraction_leaf=0.0,\n            n_estimators=10, n_jobs=1, oob_score=False, random_state=None,\n            verbose=0, warm_start=False)\n score: 0.644616\n\n\nCorey Kluber:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.524612\n\n\nJustin Verlander:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.628703\n\n\nJon Lester:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.700657\n\n\nJake Arrieta:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.456177\n\n\nYu Darvish:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.516340\n\n\nJohnny Cueto:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.339736\n\n\nStephen Strasburg:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.557506\n\n\nCarlos Carrasco:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.530501\n\n\nMichael Fulmer:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.366448\n\n\nJameson Taillon:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.461215\n\n\nJames Paxton:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.786429\n\n\nAaron Nola:\n----------------------------------------------------\nmodel: rf\nRandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',\n            max_depth=None, max_features='auto', max_leaf_nodes=None,\n            min_impurity_split=1e-07, min_samples_leaf=1,\n            min_samples_split=2, min_weight_fraction_leaf=0.0,\n            n_estimators=10, n_jobs=1, oob_score=False, random_state=None,\n            verbose=0, warm_start=False)\n score: 0.478040\n\n\nMasahiro Tanaka:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.379829\n\n\nZack Greinke:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.542669\n\n\nJose Quintana:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.661551\n\n\nJulio Teheran:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.516197\n\n\nSean Manaea:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.743175\n\n\nDanny Duffy:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.583348\n\n\nKyle Hendricks:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.724929\n\n\nLance McCullers:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.674708\n\n\nMatt Harvey:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.582671\n\n\nDallas Keuchel:\n----------------------------------------------------\nmodel: nn\nMLPClassifier(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,\n       beta_2=0.999, early_stopping=False, epsilon=1e-08,\n       hidden_layer_sizes=(100,), learning_rate='constant',\n       learning_rate_init=0.001, max_iter=200, momentum=0.9,\n       nesterovs_momentum=True, power_t=0.5, random_state=None,\n       shuffle=True, solver='adam', tol=0.0001, validation_fraction=0.1,\n       verbose=False, warm_start=False)\n score: 0.705960\n\n\n",
			"settings":
			{
				"buffer_size": 14248,
				"line_ending": "Unix",
				"name": "RESULTS:"
			}
		}
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 67.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"upper",
				"Convert Case: Upper Case"
			]
		],
		"width": 485.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/classifiers",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/tensorflow"
	],
	"file_history":
	[
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/pitchers_0.txt",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/pitchers_1.txt",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/tensorflow/rnn.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/tensorflow/run_tensor_1.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/tensorflow/run_tensor.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/tensorflow/minst_deep_test.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/tensorflow/minst_test.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/classifiers/results/svm-results.txt",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/classifiers/results/rf-results.txt",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/classifiers/results/nn-results.txt",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/ETL pipeline/CSV/extended/Chris Sale_test.csv",
		"/Users/alex/Documents/GitHub/Coding_Challenges/data_science/EMD/run.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/ETL pipeline/extract_pitches.R",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/ETL pipeline/Pitcher_Prediction_Modeling.R",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/classifiers/results/best-results.txt",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/classifiers/extended/nn-results.txt",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/classifiers/extended/rf-results.txt",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/classifiers/extended/svm-results.txt",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/classifiers/extended/best_results.txt",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/classifiers/extended/results.txt",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/ETL pipeline/CSV/extended/Chris Sale_train.csv",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/model_scikit-learn/results.txt",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/model_scikit-learn/run.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/scikit-learn/run.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/model_tensorflow/tensorflow.py",
		"/Users/alex/Google Drive/DataStructures/Homework Grading/HW2/Sample_solutions/FlexibleArray.adt",
		"/Users/alex/Google Drive/DataStructures/Homework Grading/HW2/Sample_solutions/SparseArray.java",
		"/Users/alex/Google Drive/JHU/2017 Spring/Information Retrieval and Web Agents/foo.prl",
		"/Users/alex/Google Drive/JHU/2017 Spring/Information Retrieval and Web Agents/foo.pl",
		"/Users/alex/Documents/GitHub/Coding_Challenges/bin/Palantir/palantir_interview.java",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/tensorflow/tensorflow.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/TS_tutorial.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/tensorflow/tensorflow_1.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/tensorflow_1.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/ETL pipeline/clean_data/Clayton_Kershaw",
		"/Users/alex/Documents/GitHub/temsorflow_1.py",
		"/Users/alex/Documents/GitHub/Scikit-learn_Tutorial/tutorial_1.py",
		"/Users/alex/Google Drive/JHU/2017 Spring/Data Mining/Lecture_2/code.py",
		"/Users/alex/Documents/GitHub/Coding_Challenges/src/Array/findDuplicateRange.java",
		"/Users/alex/Documents/GitHub/Coding_Challenges/src/Palantir/SortingLetterByOccurance.java",
		"/Users/alex/Documents/GitHub/Coding_Challenges/src/Palantir/findDuplicateRange.java",
		"/Users/alex/Documents/GitHub/Coding_Challenges/src/Palantir/dupInRange.java",
		"/Users/alex/Documents/GitHub/Coding_Challenges/src/Palantir/CryptAnalysisProblem.java",
		"/Users/alex/Google Drive/resume_builder.html",
		"/Users/alex/Documents/GitHub/Scikit-Learn Tutorial/tutorial_1.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/ETL pipeline/raw_data/Clayton Kershaw_R.csv",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/dataset/Test/easy.test",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/scikit-learn/parseCSV.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/dataset/Test/easy",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/dataset/Clayton_Kershaw/data1.test",
		"/Users/alex/Documents/GitHub/SocialDating_Matching_and_Clustering/Social Dating/Data/classification_data/data1.test",
		"/Users/alex/Documents/GitHub/SocialDating_Matching_and_Clustering/Social Dating/Data/cluster_data/clust_data1.test",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/model_code/run.sh",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/ETL pipeline/Transform/Clayton_Kershaw_txt",
		"/Users/alex/Google Drive/Career/Companies/Originate/code/myQueue.java",
		"/Users/alex/Documents/GitHub/Coding_Challenges/Python/CatchInsideTrader.py",
		"/Users/alex/Documents/GitHub/Coding_Challenges/bin/Palantir/rangeSumQuery.java",
		"/Users/alex/Documents/GitHub/Coding_Challenges/bin/Palantir/containsDuplicate.java",
		"/Users/alex/Documents/GitHub/Coding_Challenges/bin/Palantir/singleNumber.java",
		"/Users/alex/Documents/GitHub/Coding_Challenges/bin/Palantir/containsDup3.java",
		"/Users/alex/Documents/GitHub/Coding_Challenges/bin/Palantir/containsDup3.py",
		"/Users/alex/Desktop/untitled.py",
		"/Users/alex/Documents/GitHub/Coding_Challenges/src/Palantir/CatchInsideTrader.java",
		"/Users/alex/Downloads/material-resume-master/index.html",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/ETL pipeline/Transform/parseCSV.py",
		"/Users/alex/Documents/GitHub/Baseball_Analytics_ML/PitchPrediction/ETL pipeline/Transform/CSVReader.java",
		"/Users/alex/Documents/GitHub/Coding_Challenges/Python/findFraudolentTraders.py",
		"/Users/alex/Google Drive/Career/Companies/MilliporeSigma/screen.txt"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"train",
			"X_trian",
			"X_train",
			"print",
			"y_test",
			"X_train",
			"y_train",
			"X_train",
			"targets",
			"features",
			"labels",
			"data[0]",
			"data[0][:cut]",
			" ",
			"\"",
			"X_train",
			"data",
			"instances",
			"extended",
			"gs",
			"pitcher_name",
			"on_3b",
			"on_2b",
			"on_1b",
			"csv_data_on_1b",
			"full_count",
			"y_train",
			"X_train",
			"y_test",
			"\\xe2",
			"=",
			"head",
			"\t",
			"main",
			"Y_test",
			"Y_train",
			"append",
			"sklearn",
			"():\n",
			"100",
			"numpy",
			"\t",
			"#    ",
			"\n    ",
			":",
			"\t",
			" \n",
			"//",
			"(",
			"na",
			"mc_percep",
			"broke",
			"\t"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "scikit-learn/run.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10281,
						"regions":
						{
						},
						"selection":
						[
							[
								8386,
								8386
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3423.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "classifiers/results/best-results.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13820,
						"regions":
						{
						},
						"selection":
						[
							[
								8280,
								8280
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5997.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "classifiers/results/nn-results.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8900,
						"regions":
						{
						},
						"selection":
						[
							[
								10,
								10
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4305.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "classifiers/results/svm-results.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8900,
						"regions":
						{
						},
						"selection":
						[
							[
								10,
								10
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4305.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "classifiers/results/rf-results.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8900,
						"regions":
						{
						},
						"selection":
						[
							[
								8223,
								8223
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3821.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14248,
						"regions":
						{
						},
						"selection":
						[
							[
								542,
								542
							]
						],
						"settings":
						{
							"auto_name": "RESULTS:",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 31.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 148.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "pitch_prediction.sublime-project",
	"replace":
	{
		"height": 58.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"run.py",
				"scikit-learn/run.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "paral",
		"selected_items":
		[
			[
				"paral",
				"~/Google Drive/JHU/2017 Spring/Parallel Programming/Homework/parallel_programming.sublime-project"
			],
			[
				"",
				"~/Documents/GitHub/Coding_Challenges/data_science/EMD/EMD.sublime-workspace"
			],
			[
				"ir",
				"~/Google Drive/JHU/2017 Spring/Information Retrieval and Web Agents/Homework/IR.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 288.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
